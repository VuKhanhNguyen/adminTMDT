@{
    ViewData["Title"] = "Quan ly don hang";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Đóng">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@model List<WebBanHang.Models.DonHang>
@{
    int currentPage = ViewBag.CurrentPage;
    int pageSize = ViewBag.PageSize;
    int totalOrders = ViewBag.TotalOrders;
    int totalPages = (int)Math.Ceiling((double)totalOrders / pageSize);

    int startItem = ((currentPage - 1) * pageSize) + 1;
    int endItem = Math.Min(currentPage * pageSize, totalOrders);
}
<!-- header -->
<div class="top-row bg-white shadow-sm" style="display: flex; align-items: center; justify-content: space-between; padding: 10px;">
    <div class="d-flex align-items-center">
        <img src="/images/logo_web_after_removeBG.png" alt="Logo" height="40px" class="d-inline-block align-text-top me-2">
        <!-- <h5 class="mb-0 text-success">Cửa hàng của bạn</h5> -->
    </div>

    <div class="d-flex align-items-center">
        <div class="search-box me-3">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Tìm kiếm..." aria-label="Search">
                <div class="input-group-append">
                    <button class="btn btn-outline-success" type="button">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </div>

        <div class="dropdown me-3">
            <button class="btn btn-light dropdown-toggle" type="button" id="notificationDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fa-solid fa-bell text-secondary"></i>
                <span class="badge badge-danger">3</span>
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="notificationDropdown">
                <a class="dropdown-item" href="#">Có 5 đơn hàng mới</a>
                <a class="dropdown-item" href="#">2 sản phẩm sắp hết hàng</a>
                <a class="dropdown-item" href="#">Cập nhật phiên bản mới</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item text-center" href="#">Xem tất cả</a>
            </div>
        </div>

        <div class="user-info d-flex align-items-center">
            <div class="avatar me-2">
                <img src="/images/10692220.png" alt="User Avatar" class="rounded-circle" width="40" height="40">
            </div>
            <div class="user-details d-none d-sm-block">
                <h6 class="mb-0">Admin</h6>
                <small class="text-muted">Quản trị viên</small>
            </div>
        </div>
        <a id="logout" href="" class="btn btn-outline-danger btn-sm ms-3">
            <i class="fa-solid fa-sign-out-alt me-1"></i> Đăng xuất
        </a>
    </div>
</div>

<!-- Main Content -->
<article class="content p-4">
    <div class="text-center mb-4">
        <h4 class="text-success font-weight-bold">Quản lý đơn hàng</h4>
    </div>

    <!-- Filters -->
    <div class="row mb-2">
        <div class="col-md-3">
            <div class="form-group">
                <label for="orderStatus">Trạng thái đơn hàng</label>
                <select class="form-control" id="orderStatus">
                    <option value="">Tất cả</option>
                    <option value="Đã đặt hàng">Đã đặt hàng</option>
                    <option value="Đang xử lý">Đang xử lý</option>
                    <option value="Đang giao hàng">Đang giao hàng</option>
                    <option value="Đã giao hàng">Đã giao hàng</option>
                    <option value="Hoàn thành">Hoàn thành</option>
                    <option value="Đã hủy">Đã hủy</option>
                </select>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label for="paymentMethod">Phương thức thanh toán</label>
                @Html.DropDownList("paymentMethod", (SelectList)ViewBag.PaymentMethods, "Tất cả phương thức", new { @class = "form-control", id = "paymentMethod" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label for="customerSearch">Tìm kiếm</label>
                <div class="input-group">
                    <input type="text" class="form-control" id="customerSearch" placeholder="Nhập tên khách hàng hoặc mã đơn hàng">
                    <div class="input-group-append">
                        <button class="btn btn-outline-success" type="button">
                            <i class="fa fa-search"></i>
                        </button>
                    </div>
                </div>

            </div>
        </div>
        <!-- <div class="col-md-2 d-flex align-items-end">
            <button class="btn btn-primary w-100">
                <i class="fas fa-filter me-2"></i>Lọc
            </button>
        </div> -->
    </div>

    <!-- Orders Table -->
    <div class="card shadow">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="thead-light">
                        <tr>
                            <th>Mã đơn hàng</th>
                            <th>Khách hàng</th>
                            <th>Ngày đặt</th>
                            <th>Tổng tiền</th>
                            <th>Phương thức</th>
                            <th>Trạng thái</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in ViewBag.Orders)
                        {
                            string badgeClass = order.TrangThai switch
                            {
                                "Đã giao hàng" => "success",
                                "Đang giao hàng" => "warning",
                                "Đã đặt hàng" => "info",
                                "Đang xử lý" => "primary",
                                "Đã hủy" => "danger",
                                _ => "secondary"
                            };

                            <tr>
                                <td>@order.IddonHang</td>
                                <td>@order.IdkhachHangNavigation?.HoTen</td>
                                <td>@order.NgayLap.ToString("dd/MM/yyyy")</td>
                                <td>@string.Format("{0:N0}đ", order.TongTien)</td>
                                <td>@order.IdthanhToanNavigation?.TenThanhToan</td>
                                <td><span class="badge badge-@badgeClass">@order.TrangThai</span></td>
                                <td>
                                    <button class="btn btn-sm btn-info view-details-btn" data-id="@order.IddonHang" data-toggle="modal" data-target="#orderDetailModal" title="Chi tiết">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    @* <button class="btn btn-sm btn-success" title="Xác nhận"> *@
                                    @*     <i class="fas fa-check"></i> *@
                                    @* </button> *@
                                    <button class="btn btn-sm btn-danger delete-order-btn" data-id="@order.IddonHang" title="Hủy">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-between align-items-center mt-4">
                <div class="text-muted">
                    Hiển thị @startItem - @endItem trong tổng số @totalOrders đơn hàng
                </div>
                <nav aria-label="Page navigation">
                    <ul class="pagination mb-0">
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("OrderManagerment", new { page = currentPage - 1 })">Trước</a>
                        </li>

                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("OrderManagerment", new { page = i })">@i</a>
                            </li>
                        }

                        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("OrderManagerment", new { page = currentPage + 1 })">Sau</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</article>

<!-- Modal -->
<div class="modal fade" id="orderDetailModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <form id="updateOrderForm" method="post" asp-controller="OrderManagerment" asp-action="UpdateOrderStatus">
                <div class="modal-header">
                    <h5 class="modal-title" id="orderDetailsModalLabel">Chi tiết đơn hàng</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Đóng">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Hidden Order ID -->
                    <input type="hidden" name="IddonHang" id="modalOrderIdHidden" />

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p><strong>Mã đơn hàng:</strong> <span id="modalOrderId"></span></p>
                            <p><strong>Khách hàng:</strong> <span id="modalCustomerName"></span></p>
                            <p><strong>Ngày đặt:</strong> <span id="modalOrderDate"></span></p>
                            <p><strong>Phương thức thanh toán:</strong> <span id="modalPaymentMethod"></span></p>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="modalOrderStatus"><strong>Trạng thái đơn hàng:</strong></label>
                                <select class="form-control" name="TrangThai" id="modalOrderStatus">
                                    <option value="">Tất cả</option>
                                    <option value="Đã đặt hàng">Đã đặt hàng</option>
                                    <option value="Đang xử lý">Đang xử lý</option>
                                    <option value="Đang giao hàng">Đang giao hàng</option>
                                    <option value="Đã giao hàng">Đã giao hàng</option>
                                    <option value="Hoàn thành">Hoàn thành</option>
                                    <option value="Đã hủy">Đã hủy</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <!-- Chi tiết sản phẩm -->
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Sản phẩm</th>
                                    <th>Số lượng</th>
                                    <th>Đơn giá</th>
                                    <th>Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody id="modalOrderItems">
                                <!-- Dữ liệu sản phẩm sẽ được thêm ở đây bằng JS -->
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="3" class="text-right"><strong>Tổng tiền:</strong></td>
                                    <td><strong id="modalTotalAmount"></strong></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>

                    <button type="button" class="btn btn-info" id="savePDFButton" onclick="savePDF()" style="display: none;">Lưu PDF</button>
                    <button type="submit" class="btn btn-primary">Cập nhật trạng thái</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <!-- Font cho tiếng Việt -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/polyfills.umd.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/3.0.2/purify.min.js"></script>
    <script>
                $(document).ready(function () {
                       $(document).on("click", ".view-details-btn", function () {
                        var orderId = $(this).data("id");

                        $.ajax({
                            url: '/OrderManagerment/GetOrderById',
                            type: 'GET',
                            data: { id: orderId },
                            success: function (data) {
                                // Gán dữ liệu hiển thị
                                $("#modalOrderId").text(data.iddonHang); // span
                                $("#modalOrderIdHidden").val(data.iddonHang); // hidden input
                                $("#modalCustomerName").text(data.khachHang);
                                $("#modalOrderDate").text(data.ngayLap);
                                $("#modalTotalAmount").text(data.tongTien);
                                $("#modalPaymentMethod").text(data.thanhToan);
                                $("#modalOrderStatus").val(data.trangThai);

                                // Hiển thị chi tiết sản phẩm
                                let tbody = $("#modalOrderItems");
                                tbody.empty();

                                data.chiTiet.forEach(item => {
                                    tbody.append(`
                                        <tr>
                                            <td>${item.tenSanPham}</td>
                                            <td>${item.soLuong}</td>
                                            <td>${item.donGia.toLocaleString()}đ</td>
                                            <td>${item.thanhTien.toLocaleString()}đ</td>
                                        </tr>
                                    `);
                                });

                                // Kiểm tra trạng thái đơn hàng để hiển thị/ẩn nút Lưu PDF
                                if (data.trangThai === "Hoàn thành") {
                                    $("#savePDFButton").show();
                                } else {
                                    $("#savePDFButton").hide();
                                }

                                // Hiển thị modal
                                $("#orderDetailModal").modal('show');
                            }
                        });
                    });

                    // Đảm bảo backdrop biến mất khi đóng modal
                    $('#orderDetailModal').on('hidden.bs.modal', function () {
                        $('body').removeClass('modal-open');
                        $('.modal-backdrop').remove();
                    });

                    // Đóng modal bằng nút "Đóng"
                    $('[data-dismiss="modal"]').click(function () {
                        $('#orderDetailModal').modal('hide');
                    });

                    // Hiển thị/ẩn nút Lưu PDF khi thay đổi trạng thái đơn hàng
                    $('#modalOrderStatus').change(function() {
                        if ($(this).val() === "Hoàn thành") {
                            $('#savePDFButton').show();
                        } else {
                            $('#savePDFButton').hide();
                        }
                    });
                });

                // Function để tạo và tải PDF sử dụng HTML2Canvas cho tiếng Việt
                function exportToPDF() {
                    // Tạo một phần tử tạm thời để render nội dung PDF
                    const printContainer = document.createElement('div');
                    printContainer.style.padding = '20px';
                    printContainer.style.fontFamily = 'Arial, sans-serif';
                    printContainer.style.position = 'absolute';
                    printContainer.style.left = '-9999px';
                    printContainer.style.top = '-9999px';
                    printContainer.style.width = '210mm'; // Chiều rộng A4

                    // Lấy thông tin đơn hàng
                    const orderId = $("#modalOrderId").text();
                    const customerName = $("#modalCustomerName").text();
                    const orderDate = $("#modalOrderDate").text();
                    const paymentMethod = $("#modalPaymentMethod").text();
                    const orderStatus = $("#modalOrderStatus option:selected").text();
                    const totalAmount = $("#modalTotalAmount").text();

                    // Tạo nội dung HTML
                    let htmlContent = `
                        <div style="text-align: center; margin-bottom: 20px">
                            <h1 style="font-size: 20px; font-weight: bold;">CHI TIẾT ĐƠN HÀNG</h1>
                        </div>
                        <div style="margin-bottom: 30px">
                            <p><strong>Mã đơn hàng:</strong> ${orderId}</p>
                            <p><strong>Khách hàng:</strong> ${customerName}</p>
                            <p><strong>Ngày đặt:</strong> ${orderDate}</p>
                            <p><strong>Trạng thái:</strong> ${orderStatus}</p>
                            <p><strong>Phương thức thanh toán:</strong> ${paymentMethod}</p>
                        </div>
                        <div>
                            <table style="width: 100%; border-collapse: collapse; margin-bottom: 30px;">
                                <thead>
                                    <tr style="background-color: #f2f2f2;">
                                        <th style="border: 1px solid #ddd; padding: 8px; text-align: left;">Sản phẩm</th>
                                        <th style="border: 1px solid #ddd; padding: 8px; text-align: center;">Số lượng</th>
                                        <th style="border: 1px solid #ddd; padding: 8px; text-align: right;">Đơn giá</th>
                                        <th style="border: 1px solid #ddd; padding: 8px; text-align: right;">Thành tiền</th>
                                    </tr>
                                </thead>
                                <tbody>
                    `;

                    // Thêm chi tiết sản phẩm
                    $("#modalOrderItems tr").each(function(index) {
                        const productName = $(this).find("td:eq(0)").text();
                        const quantity = $(this).find("td:eq(1)").text();
                        const price = $(this).find("td:eq(2)").text();
                        const amount = $(this).find("td:eq(3)").text();

                        htmlContent += `
                            <tr>
                                <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">${productName}</td>
                                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">${quantity}</td>
                                <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${price}</td>
                                <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${amount}</td>
                            </tr>
                        `;
                    });

                    // Thêm tổng tiền
                    htmlContent += `
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="3" style="border: 1px solid #ddd; padding: 8px; text-align: right;"><strong>Tổng tiền:</strong></td>
                                        <td style="border: 1px solid #ddd; padding: 8px; text-align: right;"><strong>${totalAmount}</strong></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    `;

                    // Thêm chân trang
                    const today = new Date();
                    const dateStr = today.toLocaleDateString('vi-VN');
                    htmlContent += `
                        <div style="position: absolute; bottom: 20px; width: 100%;">
                            <p style="font-size: 10px; font-style: italic; text-align: left;">Xuất ngày: ${dateStr}</p>
                            <p style="font-size: 10px; font-style: italic; text-align: center;">Cảm ơn quý khách đã mua hàng!</p>
                        </div>
                    `;

                    // Thêm nội dung vào container
                    printContainer.innerHTML = DOMPurify.sanitize(htmlContent);
                    document.body.appendChild(printContainer);

                    // Sử dụng html2canvas để chuyển HTML thành hình ảnh
                    html2canvas(printContainer, {
                        scale: 2, // Tăng độ phân giải
                        useCORS: true,
                        allowTaint: true,
                        logging: false
                    }).then(canvas => {
                        // Khởi tạo jsPDF
                        const { jsPDF } = window.jspdf;
                        const doc = new jsPDF('p', 'mm', 'a4');

                        // Tính toán tỷ lệ để vừa với trang A4
                        const imgWidth = 210; // A4 width in mm
                        const pageHeight = 297; // A4 height in mm
                        const imgHeight = canvas.height * imgWidth / canvas.width;

                        // Thêm ảnh vào PDF
                        const imgData = canvas.toDataURL('image/png');
                        doc.addImage(imgData, 'PNG', 0, 0, imgWidth, imgHeight);

                        // Thêm trang nếu nội dung vượt quá một trang
                        let heightLeft = imgHeight;
                        let position = 0;

                        heightLeft -= pageHeight;

                        while (heightLeft > 0) {
                            position = heightLeft - imgHeight;
                            doc.addPage();
                            doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                            heightLeft -= pageHeight;
                        }

                        // Lưu file với tên theo mã đơn hàng
                        const filename = `DonHang_${orderId}_${dateStr.replace(/\//g, '-')}.pdf`;
                        doc.save(filename);

                        // Xóa container tạm
                        document.body.removeChild(printContainer);
                    });
                }

                // Gán sự kiện cho nút lưu PDF
                function savePDF() {
                    exportToPDF();
                }


            // ...existing code...

            // Sự kiện lọc theo trạng thái đơn hàng
                    $('#orderStatus').change(function () {
                    var status = $(this).val();
                    $.ajax({
                        url: '/OrderManagerment/FilterByStatus',
                        type: 'GET',
                        data: { status: status, page: 1, pageSize: 5 }, // reset về trang 1 khi lọc
                        success: function (data) {
                            var orders = data.orders;
                            var tbody = $('.table-responsive tbody').first();
                            tbody.empty();
                            if (orders.length === 0) {
                                tbody.append('<tr><td colspan="7" class="text-center">Không có đơn hàng nào.</td></tr>');
                            } else {
                                orders.forEach(function (order) {
                                    let badgeClass = "secondary";
                                    switch (order.trangThai) {
                                        case "Đã giao hàng": badgeClass = "success"; break;
                                        case "Đang giao hàng": badgeClass = "warning"; break;
                                        case "Đã đặt hàng": badgeClass = "info"; break;
                                        case "Đang xử lý": badgeClass = "primary"; break;
                                        case "Đã hủy": badgeClass = "danger"; break;
                                    }
                                    tbody.append(`
                                        <tr>
                                            <td>${order.iddonHang}</td>
                                            <td>${order.khachHang || ""}</td>
                                            <td>${order.ngayLap}</td>
                                            <td>${order.tongTien}</td>
                                            <td>${order.thanhToan || ""}</td>
                                            <td><span class="badge badge-${badgeClass}">${order.trangThai}</span></td>
                                            <td>
                                                <button class="btn btn-sm btn-info view-details-btn" data-id="${order.iddonHang}" data-toggle="modal" data-target="#orderDetailModal" title="Chi tiết">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn btn-sm btn-danger" title="Hủy">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    `);
                                });
                            }

                            // Cập nhật tổng số đơn hàng và phân trang
                            $('.text-muted').text(`Hiển thị 1 - ${orders.length} trong tổng số ${data.totalOrders} đơn hàng`);
                            var pagination = '';
                            for (let i = 1; i <= data.totalPages; i++) {
                                pagination += `<li class="page-item${i === data.currentPage ? ' active' : ''}">
                                    <a class="page-link" href="#" onclick="filterPage(${i});return false;">${i}</a>
                                </li>`;
                            }
                            $('.pagination').html(pagination);
                        }
                    });
                });

                // Hàm chuyển trang khi lọc
                function filterPage(page) {
                    var status = $('#orderStatus').val();
                    $.ajax({
                        url: '/OrderManagerment/FilterByStatus',
                        type: 'GET',
                        data: { status: status, page: page, pageSize: 5 },
                        success: function (data) {
                            // ... giống như ở trên ...
                        }
                    });
                }
                        $('#customerSearch').on('keypress', function (e) {
                    if (e.which === 13) { // Enter
                        searchOrders();
                    }
                });
                $('#customerSearch').siblings('.input-group-append').find('button').click(function () {
                    searchOrders();
                });

                function searchOrders(page = 1) {
                    var keyword = $('#customerSearch').val();
                    var status = $('#orderStatus').val();
                    $.ajax({
                        url: '/OrderManagerment/SearchOrders',
                        type: 'GET',
                        data: { keyword: keyword, status: status, page: page, pageSize: 5 },
                        success: function (data) {
                            var orders = data.orders;
                            var tbody = $('.table-responsive tbody').first();
                            tbody.empty();
                            if (orders.length === 0) {
                                tbody.append('<tr><td colspan="7" class="text-center">Không có đơn hàng nào.</td></tr>');
                            } else {
                                orders.forEach(function (order) {
                                    let badgeClass = "secondary";
                                    switch (order.trangThai) {
                                        case "Đã giao hàng": badgeClass = "success"; break;
                                        case "Đang giao hàng": badgeClass = "warning"; break;
                                        case "Đã đặt hàng": badgeClass = "info"; break;
                                        case "Đang xử lý": badgeClass = "primary"; break;
                                        case "Đã hủy": badgeClass = "danger"; break;
                                    }
                                    tbody.append(`
                                        <tr>
                                            <td>${order.iddonHang}</td>
                                            <td>${order.khachHang || ""}</td>
                                            <td>${order.ngayLap}</td>
                                            <td>${order.tongTien}</td>
                                            <td>${order.thanhToan || ""}</td>
                                            <td><span class="badge badge-${badgeClass}">${order.trangThai}</span></td>
                                            <td>
                                                <button class="btn btn-sm btn-info view-details-btn" data-id="${order.iddonHang}" data-toggle="modal" data-target="#orderDetailModal" title="Chi tiết">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn btn-sm btn-danger" title="Hủy">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    `);
                                });
                            }
                            // Cập nhật tổng số đơn hàng và phân trang
                            $('.text-muted').text(`Hiển thị 1 - ${orders.length} trong tổng số ${data.totalOrders} đơn hàng`);
                            var pagination = '';
                            for (let i = 1; i <= data.totalPages; i++) {
                                pagination += `<li class="page-item${i === data.currentPage ? ' active' : ''}">
                                    <a class="page-link" href="#" onclick="searchOrders(${i});return false;">${i}</a>
                                </li>`;
                            }
                            $('.pagination').html(pagination);
                        }
                    });
                }

                             $('#paymentMethod').change(function () {
                    var paymentMethod = $(this).val();
                    var status = $('#orderStatus').val();
                    $.ajax({
                        url: '/OrderManagerment/FilterByPayment',
                        type: 'GET',
                        data: { paymentMethod: paymentMethod, status: status, page: 1, pageSize: 5 },
                        success: function (data) {
                            var orders = data.orders;
                            var tbody = $('.table-responsive tbody').first();
                            tbody.empty();
                            if (orders.length === 0) {
                                tbody.append('<tr><td colspan="7" class="text-center">Không có đơn hàng nào.</td></tr>');
                            } else {
                                orders.forEach(function (order) {
                                    let badgeClass = "secondary";
                                    switch (order.trangThai) {
                                        case "Đã giao hàng": badgeClass = "success"; break;
                                        case "Đang giao hàng": badgeClass = "warning"; break;
                                        case "Đã đặt hàng": badgeClass = "info"; break;
                                        case "Đang xử lý": badgeClass = "primary"; break;
                                        case "Đã hủy": badgeClass = "danger"; break;
                                    }
                                    tbody.append(`
                                        <tr>
                                            <td>${order.iddonHang}</td>
                                            <td>${order.khachHang || ""}</td>
                                            <td>${order.ngayLap}</td>
                                            <td>${order.tongTien}</td>
                                            <td>${order.thanhToan || ""}</td>
                                            <td><span class="badge badge-${badgeClass}">${order.trangThai}</span></td>
                                            <td>
                                                <button class="btn btn-sm btn-info view-details-btn" data-id="${order.iddonHang}" data-toggle="modal" data-target="#orderDetailModal" title="Chi tiết">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn btn-sm btn-danger" title="Hủy">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    `);
                                });
                            }
                            // Cập nhật tổng số đơn hàng và phân trang
                            $('.text-muted').text(`Hiển thị 1 - ${orders.length} trong tổng số ${data.totalOrders} đơn hàng`);
                            var pagination = '';
                            for (let i = 1; i <= data.totalPages; i++) {
                                pagination += `<li class="page-item${i === data.currentPage ? ' active' : ''}">
                                    <a class="page-link" href="#" onclick="filterPaymentPage(${i});return false;">${i}</a>
                                </li>`;
                            }
                            $('.pagination').html(pagination);
                        }
                    });
                });

                // Hàm chuyển trang khi lọc theo phương thức thanh toán
                function filterPaymentPage(page) {
                    var paymentMethod = $('#paymentMethod').val();
                    var status = $('#orderStatus').val();
                    $.ajax({
                        url: '/OrderManagerment/FilterByPayment',
                        type: 'GET',
                        data: { paymentMethod: paymentMethod, status: status, page: page, pageSize: 5 },
                        success: function (data) {
                                 var orders = data.orders;
                                var tbody = $('.table-responsive tbody').first();
                                tbody.empty();
                                if (orders.length === 0) {
                                    tbody.append('<tr><td colspan="7" class="text-center">Không có đơn hàng nào.</td></tr>');
                                } else {
                                    orders.forEach(function (order) {
                                        let badgeClass = "secondary";
                                        switch (order.trangThai) {
                                            case "Đã giao hàng": badgeClass = "success"; break;
                                            case "Đang giao hàng": badgeClass = "warning"; break;
                                            case "Đã đặt hàng": badgeClass = "info"; break;
                                            case "Đang xử lý": badgeClass = "primary"; break;
                                            case "Đã hủy": badgeClass = "danger"; break;
                                        }
                                        tbody.append(`
                                            <tr>
                                                <td>${order.iddonHang}</td>
                                                <td>${order.khachHang || ""}</td>
                                                <td>${order.ngayLap}</td>
                                                <td>${order.tongTien}</td>
                                                <td>${order.thanhToan || ""}</td>
                                                <td><span class="badge badge-${badgeClass}">${order.trangThai}</span></td>
                                                <td>
                                                    <button class="btn btn-sm btn-info view-details-btn" data-id="${order.iddonHang}" data-toggle="modal" data-target="#orderDetailModal" title="Chi tiết">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-danger" title="Hủy">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        `);
                                    });
                                }
                                // Cập nhật tổng số đơn hàng và phân trang
                                $('.text-muted').text(`Hiển thị 1 - ${orders.length} trong tổng số ${data.totalOrders} đơn hàng`);
                                var pagination = '';
                                for (let i = 1; i <= data.totalPages; i++) {
                                    pagination += `<li class="page-item${i === data.currentPage ? ' active' : ''}">
                                        <a class="page-link" href="#" onclick="searchOrders(${i});return false;">${i}</a>
                                    </li>`;
                                }
                                $('.pagination').html(pagination);
                        }
                    });
                }

                function filterOrders(page = 1) {
                    var status = $('#orderStatus').val();
                    var paymentMethod = $('#paymentMethod').val();
                    $.ajax({
                        url: '/OrderManagerment/FilterOrders',
                        type: 'GET',
                        data: { status: status, paymentMethod: paymentMethod, page: page, pageSize: 5 },
                        success: function (data) {
                            var orders = data.orders;
                            var tbody = $('.table-responsive tbody').first();
                            tbody.empty();
                            if (orders.length === 0) {
                                tbody.append('<tr><td colspan="7" class="text-center">Không có đơn hàng nào.</td></tr>');
                            } else {
                                orders.forEach(function (order) {
                                    let badgeClass = "secondary";
                                    switch (order.trangThai) {
                                        case "Đã giao hàng": badgeClass = "success"; break;
                                        case "Đang giao hàng": badgeClass = "warning"; break;
                                        case "Đã đặt hàng": badgeClass = "info"; break;
                                        case "Đang xử lý": badgeClass = "primary"; break;
                                        case "Đã hủy": badgeClass = "danger"; break;
                                    }
                                    tbody.append(`
                                        <tr>
                                            <td>${order.iddonHang}</td>
                                            <td>${order.khachHang || ""}</td>
                                            <td>${order.ngayLap}</td>
                                            <td>${order.tongTien}</td>
                                            <td>${order.thanhToan || ""}</td>
                                            <td><span class="badge badge-${badgeClass}">${order.trangThai}</span></td>
                                            <td>
                                                <button class="btn btn-sm btn-info view-details-btn" data-id="${order.iddonHang}" data-toggle="modal" data-target="#orderDetailModal" title="Chi tiết">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn btn-sm btn-danger" title="Hủy">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    `);
                                });
                            }
                            // Cập nhật tổng số đơn hàng và phân trang
                            $('.text-muted').text(`Hiển thị 1 - ${orders.length} trong tổng số ${data.totalOrders} đơn hàng`);
                            var pagination = '';
                            for (let i = 1; i <= data.totalPages; i++) {
                                pagination += `<li class="page-item${i === data.currentPage ? ' active' : ''}">
                                    <a class="page-link" href="#" onclick="filterOrders(${i});return false;">${i}</a>
                                </li>`;
                            }
                            $('.pagination').html(pagination);
                        }
                    });
                }

                // Gọi filterOrders khi thay đổi bất kỳ combobox nào
                $('#orderStatus, #paymentMethod').change(function () {
                    filterOrders();
                });

                //Xóa đơn
                $(document).on('click', '.delete-order-btn', function () {
            var orderId = $(this).data('id');
            if (confirm('Bạn có chắc chắn muốn xóa đơn hàng này?')) {
                $.ajax({
                    url: '/OrderManagerment/DeleteOrder',
                    type: 'POST',
                    data: { id: orderId },
                    success: function (res) {
                        if (res.success) {
                            // Hiển thị thông báo thành công
                            showAlert('success', 'Xóa đơn hàng thành công!');
                            // Reload lại danh sách đơn hàng
                            filterOrders();
                        } else {
                            showAlert('danger', res.message || 'Xóa thất bại!');
                        }
                    },
                    error: function () {
                        showAlert('danger', 'Có lỗi xảy ra!');
                    }
                });
            }
                });

        // Hàm hiển thị alert
        function showAlert(type, message) {
            var alertHtml = `<div class="alert alert-${type} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="close" data-dismiss="alert" aria-label="Đóng">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>`;
            $('.content').prepend(alertHtml);
            setTimeout(function () {
                $('.alert').alert('close');
            }, 3000);
        }
    </script>
}